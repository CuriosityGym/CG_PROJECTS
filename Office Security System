#include <SPI.h>
#include <MFRC522.h>

#define RST_PIN         9          // Configurable, see typical pin layout above
#define SS_PIN          10         // Configurable, see typical pin layout above

MFRC522 mfrc522(SS_PIN, RST_PIN); // Create MFRC522 instance

#define FLAME_SENSOR A0
#define GAS_SENSOR A1

#define GREEN_LED 6
#define RED_LED 7 
#define YELLOW_LED 8

void setup() {
  Serial.begin(9600);
  SPI.begin();        // Init SPI bus
  mfrc522.PCD_Init(); // Init MFRC522 card

  pinMode(FLAME_SENSOR, INPUT);
  pinMode(GAS_SENSOR, INPUT);

  pinMode(GREEN_LED, OUTPUT);
  pinMode(RED_LED, OUTPUT);
  pinMode(YELLOW_LED, OUTPUT);

  digitalWrite(GREEN_LED, HIGH);
}

void loop() {
  // Look for new cards
  if ( ! mfrc522.PICC_IsNewCardPresented()) {
    return;
  }

  // Select one of the cards
  if ( ! mfrc522.PICC_ReadCardSerial()) {
    return;
  }

  // Check if the RFID tag is authorized
  if (isAuthorizedTag(mfrc522.uid.uidByte, mfrc522.uid.size)) {
    // Valid tag, unlock the door
    unlockDoor();
  } else {
    // Invalid tag, trigger alarm
    triggerAlarm();
  }

  // Check sensors for fire and gas
  checkFireAndGas();
}

void unlockDoor() {
  // Code to unlock the office door goes here
  Serial.println("Door unlocked");
}

void triggerAlarm() {
  // Code to trigger the alarm goes here
  Serial.println("Invalid tag, alarm triggered");
}

void checkFireAndGas() {
  int flameValue = analogRead(FLAME_SENSOR);
  int gasValue = analogRead(GAS_SENSOR);

  if (flameValue > FLAME_THRESHOLD) {
    // Fire detected, trigger fire alarm
    triggerFireAlarm();
  }

  if (gasValue > GAS_THRESHOLD) {
    // Gas leak detected, trigger gas alarm 
    triggerGasAlarm();
  }
}

void triggerFireAlarm() {
  // Code to trigger the fire alarm goes here
  Serial.println("Fire alarm triggered");
  digitalWrite(RED_LED, HIGH);
}

void triggerGasAlarm() {
  // Code to trigger the gas alarm goes here 
  Serial.println("Gas alarm triggered");
  digitalWrite(YELLOW_LED, HIGH);
}

boolean isAuthorizedTag(byte * uid, byte uidSize) {
  // Code to check if the RFID tag is authorized goes here
  // Return true if authorized, false otherwise
  return true;
}
